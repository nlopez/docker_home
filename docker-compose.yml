version: "2"

networks:
  default:
    driver: macvlan
    driver_opts:
      parent: eth0
    ipam:
      driver: default
      config:
        - subnet: 192.168.240.0/24
          ip_range: 192.168.240.0/25
          gateway: 192.168.240.1

services:
  consul:
    container_name: consul
    image: consul
    volumes:
      - /dockerfs/consul/data:/consul/data
      - /dockerfs/consul/config:/consul/config
    command: consul agent -server -client=0.0.0.0 -bootstrap-expect=1 -data-dir /consul/data -ui
    restart: always
    networks:
      default:
        ipv4_address: 192.168.240.128

  registrator:
    container_name: registrator
    image: gliderlabs/registrator
    volumes:
      - /var/run/docker.sock:/tmp/docker.sock
    command: -internal -resync 60 consul://consul:8500
    restart: always
    depends_on:
      - consul

  nzbget:
    container_name: nzbget
    image: linuxserver/nzbget
    ports:
      - "6789"
    volumes:
      - /dockerfs/nzbget/config:/config
      - /dockerfs/nzbget/config:/downloads
      - /mnt/media/downloads:/downloads_actual
    env_file: common.env
    restart: always

  sonarr:
    container_name: sonarr
    image: linuxserver/sonarr
    ports:
      - "8989"
    volumes:
      - /dockerfs/sonarr/config:/config
      - /mnt/media:/media
      - /dev/rtc:/dev/rtc:ro
      - /mnt/media/downloads:/downloads_actual
    env_file: common.env
    restart: always

  couchpotato:
    container_name: couchpotato
    image: linuxserver/couchpotato
    ports:
      - "5050"
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - /dockerfs/couchpotato/config:/config
      - /mnt/media/downloads:/downloads_actual
      - /mnt/media/movies:/movies
    env_file: common.env
    restart: always

  plexpy:
    container_name: plexpy
    image: linuxserver/plexpy
    ports:
      - "8181"
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - /dockerfs/plexpy/config:/config
      - /mnt/plex_logs:/logs:ro
    env_file: common.env
    restart: always

  syncthing:
    container_name: syncthing
    image: linuxserver/syncthing
    env_file: common.env
    ports:
      - "8384"
      # - "22000"
      # - "21027/udp"
    volumes:
      - /dockerfs/syncthing/config:/config
      - /mnt/syncthing:/mnt/syncthing
    restart: always
    networks:
      default:
        ipv4_address: 192.168.240.135

  pritunl:
    container_name: pritunl
    image: michelkaeser/docker-pritunl
    ports:
      - "443"
    environment:
      # http://gliderlabs.com/registrator/latest/user/services/#container-overrides
      - SERVICE_NAME=pritunl
    volumes:
      - /dockerfs/pritunl/pritunl:/var/lib/pritunl
      - /dockerfs/pritunl/mongodb:/var/lib/mongodb
    networks:
      default:
        ipv4_address: 192.168.240.129
    privileged: true
    restart: always

  unifi:
    container_name: unifi
    image: linuxserver/unifi
    env_file: common.env
    ports:
      - "8080"
      - "8081"
      - "8443"
      - "8843"
      - "8880"
    volumes:
      - /dockerfs/unifi/config:/config
    restart: always
    networks:
      default:
        ipv4_address: 192.168.240.130

  deluge:
    container_name: deluge
    image: linuxserver/deluge
    ports:
      - "8112"
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - /dockerfs/deluge/config:/config
      - /mnt/media/downloads:/media/downloads
    env_file: common.env
    restart: always
    networks:
      default:
        ipv4_address: 192.168.240.131

  # influxdb:
  #   container_name: influxdb
  #   image: influxdb
  #   ports:
  #     - "8083"
  #     - "8086"
  #     - "2003"
  #   volumes:
  #     - "/dockerfs/influxdb/data:/var/lib/influxdb"
  #   restart: always
  #   env_file: influxdb.env
  #   networks:
  #     default:
  #       ipv4_address: 192.168.240.132

  # prometheus:
  #   container_name: prometheus
  #   image: prom/prometheus
  #   command: -storage.local.path=/prometheus-data -config.file=/etc/prometheus.yml
  #   ports:
  #     - "9090"
  #   volumes:
  #     - "/dockerfs/prometheus/data:/prometheus-data"
  #     - "/dockerfs/prometheus/prometheus.yml:/etc/prometheus.yml"
  #   restart: always
  #   networks:
  #     default:
  #       ipv4_address: 192.168.240.133

  # graphite-exporter:
  #   container_name: graphite-exporter
  #   image: prom/graphite-exporter
  #   command: -graphite.listen-address=":2003"
  #   ports:
  #     - "9108"
  #     - "2003"
  #     - "2003/udp"
  #   restart: always
  #   networks:
  #     default:
  #       ipv4_address: 192.168.240.134

  # grafana:
  #   container_name: grafana
  #   image: grafana/grafana
  #   ports:
  #     - "3000"
  #   volumes:
  #     - "/dockerfs/grafana/data:/var/lib/grafana"
  #   restart: always

  jenkins:
    container_name: jenkins
    image: jenkins:alpine
    ports:
      - "8080"
      # - "50000"
    volumes:
      - "/dockerfs/jenkins/data:/var/jenkins_home"
    restart: always

  oauth2_proxy:
    container_name: oauth2_proxy
    image: zappi/oauth2_proxy
    env_file: secret.env
    volumes:
      - /dockerfs/oauth2_proxy/config:/etc/oauth2_proxy:ro
    command: >
      --upstream="file:///dev/null"
      --http-address="0.0.0.0:4180"
      --cookie-refresh="1h"
      --cookie-domain=".desertbluffs.com"
      --cookie-secure=true
      --cookie-httponly=true
      --authenticated-emails-file="/etc/oauth2_proxy/authenticated_emails"
    restart: always
    networks:
      default:
        ipv4_address: 192.168.240.136
